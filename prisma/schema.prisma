// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])

  onboarded Boolean @default(false) @map("onboardingComplete")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // âœ… removed @default(now())

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model DigestRun {
  id      String   @id @default(cuid())
  company String?
  email   String?
  env     String
  mode    String // "cron" | "manual" | "preview"
  date    DateTime @default(now())
  alerts  Int
  success Boolean
  error   String?
}

model Company {
  id              String  @id @default(cuid())
  name            String?
  timezone        String? @default("Asia/Kolkata")
  slackWebhookUrl String?
  sheetCsvUrl     String?

  // NEW prefs
  minSeverity     String  @default("OK")
  quietHoursStart String? @default("21:00")
  quietHoursEnd   String? @default("07:00")
  digestHourLocal Int?    @default(9)

  summaryWebhookUrl String?   // channel for the one daily summary
  brandWebhookUrls  Json?     // map: { "Nike": "https://...", "Adidas": "https://..." }

  currencyCode    String  @default("USD") // ISO 4217, e.g. USD, INR, GBP, EUR

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  // ðŸ‘‡ ADD THIS LINE
  deliveryLogs DeliveryLog[]
}

model DeliveryLog {
  id        String   @id @default(cuid())
  companyId String?
  email     String?
  channel   String // "slack" | "email"
  status    String // "sent" | "skipped" | "failed"
  reason    String? // why skipped/failed (hour, quiet, minSeverity, noWebhook, error:XYZ)
  env       String
  dry       Boolean
  createdAt DateTime @default(now())

  company Company? @relation(fields: [companyId], references: [id])
}
