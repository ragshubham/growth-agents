generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  companyId     String?
  company       Company?  @relation(fields: [companyId], references: [id])

  onboarded     Boolean   @default(false) @map("onboardingComplete")

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt @default(now())  // ðŸ‘ˆ add @default(now())

  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model DigestRun {
  id        String   @id @default(cuid())
  company   String?
  email     String?
  env       String
  mode      String   // "cron" | "manual" | "preview"
  date      DateTime @default(now())
  alerts    Int
  success   Boolean
  error     String?
}

model Company {
  id              String    @id @default(cuid())
  name            String
  timezone        String    @default("UTC")
  slackWebhookUrl String?
  sheetCsvUrl     String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  users           User[]
}
